{"version":3,"sources":["components/card/CharacterCard.js","components/navbar/img/logo.png","components/navbar/NavBar.js","pages/home/Home.js","components/episode-card/EpisodeCard.js","pages/character/CharacterPage.js","routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["CharacterCard","character","history","useNavigate","Col","className","Card","style","width","Img","variant","src","image","Body","Title","name","ListGroup","Item","species","gender","status","Button","onClick","id","background","border","NavBar","alive","dead","all","Navbar","bg","Container","Brand","cursor","logo","alt","Nav","Link","Home","useState","characters","setCharacters","scrollTop","document","body","scrollTo","top","behavior","documentElement","useEffect","axios","get","then","res","data","allCharacters","results","Row","padding","map","index","display","justifyContent","info","prev","margin","next","EpisodeCard","episodes","episode","setepisode","console","log","href","CharacterPage","useParams","setCharacter","textAlign","location","Routes","basename","process","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1eb9c85.chunk.js","sourcesContent":["import { Card, Button, Container, Row, Col, ListGroup } from \"react-bootstrap\";\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CharacterCard = ({ character }) => {\r\n\r\n  const history = useNavigate()\r\n\r\n  return (\r\n\r\n    <Col className=\"my-2\">\r\n      <Card style={{ width: '15rem' }}>\r\n        <Card.Img variant=\"top\" src={character.image} />\r\n        <Card.Body className=\"text-center\">\r\n          <Card.Title className=\"text-center\">{character.name}</Card.Title>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item className=\"text-center\">Species: {character.species}</ListGroup.Item>\r\n            <ListGroup.Item className=\"text-center\">Gender: {character.gender}</ListGroup.Item>\r\n            <ListGroup.Item className=\"text-center\">Status: {character.status}</ListGroup.Item>\r\n          </ListGroup>\r\n          <Button onClick={() => history(`/${character.id}`)} style={{ background: \"black\", border: \"black\" }}>See more</Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n\r\n  )\r\n}\r\n\r\nCharacterCard.propTypes = {\r\n  character: PropTypes.object\r\n}\r\nexport default CharacterCard","export default __webpack_public_path__ + \"static/media/logo.027363c0.png\";","import { Navbar, Nav, Container } from \"react-bootstrap\"\r\nimport { useNavigate } from 'react-router';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport logo from './img/logo.png';\r\n\r\n\r\nconst NavBar = ({ alive, dead, all }) => {\r\n\r\n    const history = useNavigate()\r\n\r\n    return (\r\n        <Navbar bg=\"light\">\r\n            <Container>\r\n                <Navbar.Brand style={{cursor:\"pointer\"}} onClick={() => history(`/`)}>\r\n                    <img\r\n                        src={logo}\r\n                        width=\"95px\"\r\n                        className=\"d-inline-block align-top\"\r\n                        alt=\"Rick and Morty logo\"\r\n                    />\r\n                </Navbar.Brand>\r\n                <Nav className=\"me-auto\">\r\n                    <Nav.Link onClick={all}>All</Nav.Link>\r\n                    <Nav.Link onClick={alive}>Alive</Nav.Link>\r\n                    <Nav.Link onClick={dead}>Dead</Nav.Link>\r\n                </Nav>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\nNavBar.propTypes = {\r\n    alive: PropTypes.func,\r\n    dead: PropTypes.func,\r\n    all: PropTypes.func\r\n}\r\nexport default NavBar","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport CharacterCard from '../../components/card/CharacterCard';\r\nimport { Row, Button } from 'react-bootstrap';\r\nimport NavBar from '../../components/navbar/NavBar';\r\nimport { scrollTop } from 'dom-helpers';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [characters, setCharacters] = useState([])\r\n\r\n    const scrollTop = () => {\r\n\t\tdocument.body.scrollTo({ top: 0, behavior: 'smooth' })\r\n\t\tdocument.documentElement.scrollTo({ top: 0, behavior: 'smooth' })\r\n\t}\r\n\r\n    useEffect(() => {\r\n        axios.get('https://rickandmortyapi.com/api/character').then(res => { setCharacters(res.data) })\r\n\r\n    }, []);\r\n\r\n    const allCharacters = characters.results;\r\n\r\n    const alive = () => axios.get('https://rickandmortyapi.com/api/character/?status=alive').then(res => { setCharacters(res.data) })\r\n    const dead = () => axios.get('https://rickandmortyapi.com/api/character/?status=dead').then(res => { setCharacters(res.data) })\r\n    const all = () => axios.get('https://rickandmortyapi.com/api/character').then(res => { setCharacters(res.data) })\r\n\r\n    const nextPage = () => { axios.get(characters.info?.next).then(res => { setCharacters(res.data);scrollTop() }) };\r\n    const backPage = () => { axios.get(characters.info?.prev).then(res => { setCharacters(res.data);scrollTop() }) };\r\n\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <NavBar alive={alive} dead={dead} all={all} />\r\n            </header>\r\n            <Row style={{ background: \"black\", padding: \"26px 0 0 50px\" }}>\r\n                {allCharacters?.map((character, index) => (<CharacterCard key={index} character={character} />))}\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    {characters?.info?.prev && <Button style={{ margin: \"20px\" }} onClick={backPage}>Back</Button>}\r\n                    {characters?.info?.next && <Button style={{ margin: \"20px\" }} onClick={nextPage}>Next</Button>}\r\n                </div>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { useNavigate } from 'react-router';\r\nimport PropTypes from 'prop-types'\r\nimport { propTypes } from \"react-bootstrap/esm/Image\";\r\n\r\nconst EpisodeCard = ({ episodes }) => {\r\n\r\n  const history = useNavigate()\r\n\r\n  const [episode, setepisode] = useState();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n   axios.get(episodes).then(res => { setepisode(res.data) })\r\n  }, [])\r\n\r\n \r\n  console.log(episodes)\r\n  console.log(episode)\r\n\r\nreturn (\r\n  <ListGroup variant=\"flush\">\r\n    <ListGroup.Item href=\"#\">{episode?.name};</ListGroup.Item>\r\n  </ListGroup>\r\n\r\n)\r\n}\r\n\r\nEpisodeCard.propTypes = {\r\n  episodes: PropTypes.string\r\n}\r\nexport default EpisodeCard","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Card, Button, ListGroup, Container } from 'react-bootstrap';\r\nimport EpisodeCard from '../../components/episode-card/EpisodeCard';\r\nimport { useParams } from 'react-router';\r\nimport NavBar from '../../components/navbar/NavBar';\r\n\r\n\r\n\r\nconst CharacterPage = () => {\r\n\r\n    const { id } = useParams()\r\n\r\n    const [character, setCharacter] = useState()\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://rickandmortyapi.com/api/character/${id}`).then(res => { setCharacter(res.data) })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <NavBar />\r\n            </header>\r\n            <section style={{ background: \"black\" }}>\r\n                <Container style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <Card style={{ width: '18rem', margin: \"46px\" }}>\r\n                        <Card.Img variant=\"top\" src={character?.image} />\r\n                        <Card.Body>\r\n                            <Card.Title style={{ textAlign: 'center' }}>{character?.name}</Card.Title>\r\n                        </Card.Body>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item className=\"text-center\">Species: {character?.species}</ListGroup.Item>\r\n                            <ListGroup.Item className=\"text-center\">Gender: {character?.gender}</ListGroup.Item>\r\n                            <ListGroup.Item className=\"text-center\">Status: {character?.status}</ListGroup.Item>\r\n                            <ListGroup.Item className=\"text-center\">Location: {character?.location?.name}</ListGroup.Item>\r\n                        </ListGroup>\r\n                        <Card.Body>\r\n                            <h6 style={{ textAlign: 'center' }}>Episodes:</h6>\r\n                            {character?.episode.map((episodes, index) => (<EpisodeCard key={index} episodes={episodes} />))}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CharacterPage","import React from \"react\";\r\nimport Home from \"../pages/home/Home\";\r\nimport CharacterPage from \"../pages/character/CharacterPage\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes as Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route path=\"/\" element={<Home/>} />,\r\n                <Route path=\"/:id\" element={<CharacterPage/>} />\r\n            </Switch>\r\n        </Router>\r\n\r\n    )\r\n}\r\n\r\nexport default Routes","import Routes from './routes/Routes';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nfunction App() {\n  return (\n   <Routes></Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}