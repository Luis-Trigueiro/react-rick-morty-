{"version":3,"sources":["components/card/CharacterCard.js","pages/home/img/logo.png","pages/home/Home.js","routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["CharacterCard","character","Col","className","Card","style","width","Img","variant","src","image","Body","Title","name","ListGroup","Item","species","gender","status","Button","background","border","Home","useState","characters","setCharacters","useEffect","axios","get","then","res","data","allCharacters","results","Navbar","bg","Container","Brand","href","logo","alt","Nav","Link","Row","padding","map","index","display","justifyContent","info","prev","margin","onClick","next","Routes","basename","process","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a2dd5db.chunk.js","sourcesContent":["import { Card, Button, Container, Row, Col, ListGroup } from \"react-bootstrap\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CharacterCard = ({ character }) => {\r\n\r\n  return (\r\n\r\n    <Col className=\"my-2\">\r\n      <Card style={{ width: '15rem' }}>\r\n        <Card.Img variant=\"top\" src={character.image} />\r\n        <Card.Body className=\"text-center\">\r\n          <Card.Title className=\"text-center\">{character.name}</Card.Title>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item className=\"text-center\">Species: {character.species}</ListGroup.Item>\r\n            <ListGroup.Item className=\"text-center\">Gender: {character.gender}</ListGroup.Item>\r\n            <ListGroup.Item className=\"text-center\">Status: {character.status}</ListGroup.Item>\r\n          </ListGroup>\r\n          <Button style={{background:\"black\",border:\"black\"}}>Go somewhere</Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n\r\n  )\r\n}\r\n\r\nCharacterCard.propTypes = {\r\n  character: PropTypes.object\r\n}\r\nexport default CharacterCard","export default __webpack_public_path__ + \"static/media/logo.027363c0.png\";","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport CharacterCard from '../../components/card/CharacterCard';\r\nimport { Container, Row, Nav, Navbar, Button, Pagination } from 'react-bootstrap';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport logo from './img/logo.png';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [characters, setCharacters] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get('https://rickandmortyapi.com/api/character').then(res => { setCharacters(res.data) })\r\n    }, []);\r\n\r\n    const allCharacters = characters.results;\r\n\r\n    const nextPage = () => { axios.get(characters.info?.next).then(res => { setCharacters(res.data) }) };\r\n    const backPage = () => { axios.get(characters.info?.prev).then(res => { setCharacters(res.data) }) };\r\n\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <Navbar bg=\"light\">\r\n                    <Container>\r\n                        <Navbar.Brand href=\"#home\">\r\n                            <img\r\n                                src={logo}\r\n                                width=\"95px\"\r\n                                className=\"d-inline-block align-top\"\r\n                                alt=\"Rick and Morty logo\"\r\n                            />\r\n                        </Navbar.Brand>\r\n                        <Nav className=\"me-auto\">\r\n                            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                            <Nav.Link href=\"#features\">Features</Nav.Link>\r\n                            <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n                        </Nav>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n\r\n            <Row style={{ background: \"black\", padding: \"110px\" }}>\r\n                {allCharacters?.map((character, index) => (<CharacterCard key={index} character={character} />))}\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    {characters.info?.prev && <Button style={{margin:\"20px\"}} onClick={backPage}>Back</Button>}\r\n                    <Button style={{margin:\"20px\"}} onClick={nextPage}>Next</Button>\r\n                </div>\r\n            </Row>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Home","import React from \"react\";\r\nimport Home from \"../pages/home/Home\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes as Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route path=\"/\" element={<Home/>} />\r\n            </Switch>\r\n        </Router>\r\n\r\n    )\r\n}\r\n\r\nexport default Routes","import Routes from './routes/Routes';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nfunction App() {\n  return (\n   <Routes></Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}